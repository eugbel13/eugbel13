---
- name: Setting up a basic structure of Ansible tasks to install Confluence. Will be sectioned and pieced out later
  hosts: qa
# hosts have been partially defined in hosts.yml file
# paths need to be defined

- tasks:
  # Grab the bin file from the web, version is dynamically defined in hosts file
  - name: download confluence installer
    get_url:
      url: "{{confl_url}}"
      dest: /var/tmp/{{confl_bin}}
      mode: 0755

  # Pull down variable file, used during installation. Path differs between installations and upgrades
  - name: copy install.varfile
    copy:
      src: ../files/common/install.varfile
      dest: /var/tmp/response.varfile
    become: true

  # Install the service quietly using the variable file we just pulled down
  - name: install confluence
    command: /var/tmp/{{confl_bin}} -q -varfile /var/tmp/install.varfile
      creates=/opt/atlassian/confluence/install.reg

  # Add server config file for HTTPS connector info
  - name: copy server.xml
    copy:
      src: ../files/{{envir}}/config/server.xml
      dest: /opt/atlassian/confluence/conf/server.xml
    become: true

  # Defines JDNI database connection
  - name: copy web.xml
    copy:
      src: ../files/{{envir}}/config/web.xml
      dest: /opt/atlassian/confluence/confluence/WEB-INF/web.xml
    become: true

  # Add the config file that defines the DB info. 
  # This is only necessary on the first deployment. The application will manage the file after it has been installed.
  # We need to think about the best way to manage this file. When the application updates versions, this file will change.
  # If we do not keep an updated version in our repo, standing up a machine from scratch might have the incorrect build number
  # Can ansible push up the new config version to github after an update?
  - name: copy confluence.cfg.xml
    copy:
      src: ../files/{{envir}}/config/confluence.cfg.xml
      dest: /var/atlassian/application-data/confluence/confluence.cfg.xml
    become: true

  # Add the config file so Confluence boots on startup
  - name: copy confluence.conf
    copy:
      src: ../files/common/confluence.conf
      dest: /etc/init/confluence.conf
    become: true

  # We have custom macros and scripts that contain CSS and issue collector information that we need to consider
  - name: copy custom script files
      copy: 
        src: ../files/{{envir}}/config/custom/
        dest: /opt/atlassian/confluence/confluence/includes/custom/
    become: true

  # The goal of this is to copy all contents of the plugins folder and add it to the bundled plugin installation of Confluence.
  # This assumes we're keeping all of the plugins within our repo and that we want to install them all during initial setup
  - name: install plugins
    copy:
      src: ../files/{{envir}}/plugins/
      dest: /var/atlassian/application-data/confluence/bundled-plugins/
    become: true

  # the keystore file name would changed per environment and software
  - name: keystore
    copy:
      src: ../files/{{envir}}/config/{{keystore_name}}.jks
      dest: /var/atlassian/application-data/confluence/{{keystore_name}}.jks
    become: true

 # Start confluence when we're all done
  - name: systemctl start confluence.service
    service:
      name: "confluence.service"
      state: "started"
      enabled: true

# next things to consider:
# complete paths for the above
# acquiring files
# testing
...